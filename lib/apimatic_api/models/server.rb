# apimatic_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ApimaticApi
  # The user can specify multiple servers within an environment. A server
  # comprises of a name and a URL. The names of the hosts remain consistent over
  # different environments but their values may vary. The URL values can contain
  # any number of parameters defined.
  class Server < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Unique Server identifier
    # @return [String]
    attr_accessor :id

    # Server Name
    # @return [String]
    attr_accessor :name

    # Server URL
    # @return [String]
    attr_accessor :url

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['id'] = 'id'
      @_hash['name'] = 'name'
      @_hash['url'] = 'url'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      []
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(id = nil,
                   name = nil,
                   url = nil)
      @id = id
      @name = name
      @url = url
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      id = hash.key?('id') ? hash['id'] : nil
      name = hash.key?('name') ? hash['name'] : nil
      url = hash.key?('url') ? hash['url'] : nil

      # Create object from extracted values.
      Server.new(id,
                 name,
                 url)
    end
  end
end
