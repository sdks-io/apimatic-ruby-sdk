# apimatic_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require 'date'
module ApimaticApi
  # The Code Generation structure encapsulates all the  the details of an SDK
  # generation performed by a user.
  class UserCodeGeneration < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Unique Code Generation Identifier
    # @return [String]
    attr_accessor :id

    # The structure contains platforms that APIMatic CodeGen can generate SDKs
    # and Docs in.
    # @return [Platforms]
    attr_accessor :template

    # The generated SDK
    # @return [String]
    attr_accessor :generated_file

    # Generation Date and Time
    # @return [DateTime]
    attr_accessor :generated_on

    # The md5 hash of the API Description
    # @return [String]
    attr_accessor :hash_code

    # Generation Source
    # @return [String]
    attr_accessor :code_generation_source

    # Generation Version
    # @return [String]
    attr_accessor :code_gen_version

    # Generation Status
    # @return [TrueClass | FalseClass]
    attr_accessor :success

    # Unique User Identifier
    # @return [String]
    attr_accessor :user_id

    # API Specification file in a supported format
    # @return [String]
    attr_accessor :input_file

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['id'] = 'id'
      @_hash['template'] = 'template'
      @_hash['generated_file'] = 'generatedFile'
      @_hash['generated_on'] = 'generatedOn'
      @_hash['hash_code'] = 'hashCode'
      @_hash['code_generation_source'] = 'codeGenerationSource'
      @_hash['code_gen_version'] = 'codeGenVersion'
      @_hash['success'] = 'success'
      @_hash['user_id'] = 'userId'
      @_hash['input_file'] = 'inputFile'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      []
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(id = nil,
                   template = Platforms::CS_NET_STANDARD_LIB,
                   generated_file = nil,
                   generated_on = nil,
                   hash_code = nil,
                   code_generation_source = nil,
                   code_gen_version = nil,
                   success = nil,
                   user_id = nil,
                   input_file = nil)
      @id = id
      @template = template
      @generated_file = generated_file
      @generated_on = generated_on
      @hash_code = hash_code
      @code_generation_source = code_generation_source
      @code_gen_version = code_gen_version
      @success = success
      @user_id = user_id
      @input_file = input_file
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      id = hash.key?('id') ? hash['id'] : nil
      template = hash['template'] ||= Platforms::CS_NET_STANDARD_LIB
      generated_file = hash.key?('generatedFile') ? hash['generatedFile'] : nil
      generated_on = if hash.key?('generatedOn')
                       (DateTimeHelper.from_rfc3339(hash['generatedOn']) if hash['generatedOn'])
                     end
      hash_code = hash.key?('hashCode') ? hash['hashCode'] : nil
      code_generation_source =
        hash.key?('codeGenerationSource') ? hash['codeGenerationSource'] : nil
      code_gen_version =
        hash.key?('codeGenVersion') ? hash['codeGenVersion'] : nil
      success = hash.key?('success') ? hash['success'] : nil
      user_id = hash.key?('userId') ? hash['userId'] : nil
      input_file = hash.key?('inputFile') ? hash['inputFile'] : nil

      # Create object from extracted values.
      UserCodeGeneration.new(id,
                             template,
                             generated_file,
                             generated_on,
                             hash_code,
                             code_generation_source,
                             code_gen_version,
                             success,
                             user_id,
                             input_file)
    end

    def to_custom_generated_on
      DateTimeHelper.to_rfc3339(generated_on)
    end
  end
end
