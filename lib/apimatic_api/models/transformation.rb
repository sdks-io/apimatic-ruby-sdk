# apimatic_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ApimaticApi
  # Transformation structure encapsulates all the details of a Transformation.
  class Transformation < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Unique Transformation Identifier
    # @return [String]
    attr_accessor :id

    # Transformation Date and Time
    # @return [String]
    attr_accessor :transformed_on

    # Unique User Identifier
    # @return [String]
    attr_accessor :user_id

    # API Specification file to be transformed
    # @return [String]
    attr_accessor :inputted_file

    # API Specification file transformed to desired format
    # @return [String]
    attr_accessor :generated_file

    # Desired Specification format
    # @return [String]
    attr_accessor :export_format

    # Source of Transformation
    # @return [String]
    attr_accessor :transformation_source

    # Via File or URL
    # @return [String]
    attr_accessor :transformation_input

    # CodeGen Engine Version
    # @return [String]
    attr_accessor :code_gen_version

    # Successful Transformation Flag
    # @return [TrueClass | FalseClass]
    attr_accessor :success

    # Successful Transformation Flag
    # @return [ApiValidationSummary]
    attr_accessor :import_summary

    # Successful Transformation Flag
    # @return [ApiValidationSummary]
    attr_accessor :api_validation_summary

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['id'] = 'id'
      @_hash['transformed_on'] = 'transformedOn'
      @_hash['user_id'] = 'userId'
      @_hash['inputted_file'] = 'inputtedFile'
      @_hash['generated_file'] = 'generatedFile'
      @_hash['export_format'] = 'exportFormat'
      @_hash['transformation_source'] = 'transformationSource'
      @_hash['transformation_input'] = 'transformationInput'
      @_hash['code_gen_version'] = 'codeGenVersion'
      @_hash['success'] = 'success'
      @_hash['import_summary'] = 'importSummary'
      @_hash['api_validation_summary'] = 'apiValidationSummary'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      []
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(id = nil,
                   transformed_on = nil,
                   user_id = nil,
                   inputted_file = nil,
                   generated_file = nil,
                   export_format = nil,
                   transformation_source = nil,
                   transformation_input = nil,
                   code_gen_version = nil,
                   success = nil,
                   import_summary = nil,
                   api_validation_summary = nil)
      @id = id
      @transformed_on = transformed_on
      @user_id = user_id
      @inputted_file = inputted_file
      @generated_file = generated_file
      @export_format = export_format
      @transformation_source = transformation_source
      @transformation_input = transformation_input
      @code_gen_version = code_gen_version
      @success = success
      @import_summary = import_summary
      @api_validation_summary = api_validation_summary
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      id = hash.key?('id') ? hash['id'] : nil
      transformed_on = hash.key?('transformedOn') ? hash['transformedOn'] : nil
      user_id = hash.key?('userId') ? hash['userId'] : nil
      inputted_file = hash.key?('inputtedFile') ? hash['inputtedFile'] : nil
      generated_file = hash.key?('generatedFile') ? hash['generatedFile'] : nil
      export_format = hash.key?('exportFormat') ? hash['exportFormat'] : nil
      transformation_source =
        hash.key?('transformationSource') ? hash['transformationSource'] : nil
      transformation_input =
        hash.key?('transformationInput') ? hash['transformationInput'] : nil
      code_gen_version =
        hash.key?('codeGenVersion') ? hash['codeGenVersion'] : nil
      success = hash.key?('success') ? hash['success'] : nil
      import_summary = ApiValidationSummary.from_hash(hash['importSummary']) if
        hash['importSummary']
      api_validation_summary = ApiValidationSummary.from_hash(hash['apiValidationSummary']) if
        hash['apiValidationSummary']

      # Create object from extracted values.
      Transformation.new(id,
                         transformed_on,
                         user_id,
                         inputted_file,
                         generated_file,
                         export_format,
                         transformation_source,
                         transformation_input,
                         code_gen_version,
                         success,
                         import_summary,
                         api_validation_summary)
    end
  end
end
