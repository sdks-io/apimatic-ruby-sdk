# apimatic_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ApimaticApi
  # This structure puts together the URL of the file to be transformed, along
  # with the desired export format.
  class TransformViaUrlRequest < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The URL for the API specification file.<br><br>**Note:** This URL should
    # be publicly accessible.
    # @return [String]
    attr_accessor :url

    # The structure contains API specification formats that Transformer can
    # convert to.
    # @return [ExportFormats]
    attr_accessor :export_format

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['url'] = 'url'
      @_hash['export_format'] = 'export_format'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      []
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(url = nil,
                   export_format = nil)
      @url = url
      @export_format = export_format
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      url = hash.key?('url') ? hash['url'] : nil
      export_format = hash.key?('export_format') ? hash['export_format'] : nil

      # Create object from extracted values.
      TransformViaUrlRequest.new(url,
                                 export_format)
    end
  end
end
