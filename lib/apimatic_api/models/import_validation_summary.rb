# apimatic_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ApimaticApi
  # ImportValidationSummary Model.
  class ImportValidationSummary < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [TrueClass | FalseClass]
    attr_accessor :success

    # TODO: Write general description for this method
    # @return [Array[String]]
    attr_accessor :errors

    # TODO: Write general description for this method
    # @return [Array[String]]
    attr_accessor :warnings

    # TODO: Write general description for this method
    # @return [Array[String]]
    attr_accessor :messages

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['success'] = 'success'
      @_hash['errors'] = 'errors'
      @_hash['warnings'] = 'warnings'
      @_hash['messages'] = 'messages'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      []
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(success = nil,
                   errors = nil,
                   warnings = nil,
                   messages = nil)
      @success = success
      @errors = errors
      @warnings = warnings
      @messages = messages
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      success = hash.key?('success') ? hash['success'] : nil
      errors = hash.key?('errors') ? hash['errors'] : nil
      warnings = hash.key?('warnings') ? hash['warnings'] : nil
      messages = hash.key?('messages') ? hash['messages'] : nil

      # Create object from extracted values.
      ImportValidationSummary.new(success,
                                  errors,
                                  warnings,
                                  messages)
    end
  end
end
